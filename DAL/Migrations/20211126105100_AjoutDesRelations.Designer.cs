// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211126105100_AjoutDesRelations")]
    partial class AjoutDesRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.Jeux", b =>
                {
                    b.Property<int>("IdJeux")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("IdJeux");

                    b.ToTable("T_Jeux");

                    b.HasData(
                        new
                        {
                            IdJeux = 3,
                            Nom = "Deep Rock Galactic",
                            Score = 9.0
                        },
                        new
                        {
                            IdJeux = 5,
                            Nom = "Pacman",
                            Score = 5.0
                        });
                });

            modelBuilder.Entity("DAL.Entities.JeuxJoueur", b =>
                {
                    b.Property<int>("IdJeux")
                        .HasColumnType("int");

                    b.Property<int>("IdJoueur")
                        .HasColumnType("int");

                    b.HasKey("IdJeux", "IdJoueur");

                    b.HasIndex("IdJoueur");

                    b.ToTable("JeuxJoueur");
                });

            modelBuilder.Entity("DAL.Entities.Joueur", b =>
                {
                    b.Property<int>("IdJoueur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdJoueur");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UK_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("T_Joueur");

                    b.HasCheckConstraint("CK_EmailVerification", "Email like '__%@__%.__%'");
                });

            modelBuilder.Entity("DAL.Entities.JeuxJoueur", b =>
                {
                    b.HasOne("DAL.Entities.Jeux", "Jeux")
                        .WithMany("JeuxJ")
                        .HasForeignKey("IdJeux")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Joueur", "Joueur")
                        .WithMany("JoueursJ")
                        .HasForeignKey("IdJoueur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeux");

                    b.Navigation("Joueur");
                });

            modelBuilder.Entity("DAL.Entities.Jeux", b =>
                {
                    b.Navigation("JeuxJ");
                });

            modelBuilder.Entity("DAL.Entities.Joueur", b =>
                {
                    b.Navigation("JoueursJ");
                });
#pragma warning restore 612, 618
        }
    }
}
